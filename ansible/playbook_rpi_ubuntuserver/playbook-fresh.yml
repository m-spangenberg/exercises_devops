# Initial Ubuntu Server Setup for Raspberry Pi 3B+

# Update and install packages
# Install docker
# Set hostname and FQDN
# Set timezone
# Change SSH port
# Create default user with sudo privs.
# Copy public keys
# Change root pass.
# Disable SSH pass for root and clear pass.

---

  # our target, the freshly imaged raspberry pi
- hosts: rpi_3b_server
  become: yes

  # initial variables
  vars:
    ssh_port: "69"
    ti_zone: Africa/Windhoek

  tasks:

    # UPDATE AND INSTALL PACKAGES

    - name: Update APT cache
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Upgrade APT packages 
      apt:
        upgrade: dist
      register: upgrade
      retries: 15
      delay: 5
      until: upgrade is success

    - name: Ensure that these software packages are installed
      apt:
        pkg:
          - build-essential
          - apt-transport-https
          - software-properties-common
          - ca-certificates
          - needrestart
          - lsb-release
          - python3
          - python3-pip
          - pipenv
          - gnupg
          - curl
        state: latest

    # INSTALL DOCKER

    - name: Create a GPG keyring directory if it does not exist
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory

    - name: Install GPG key
      ansible.builtin.command:
        cmd: ["curl", "-fsSL", "https://download.docker.com/linux/ubuntu/gpg", "|", "sudo", "gpg", "--dearmor", "-o", "/etc/apt/keyrings/docker.gpg"]

    - name: Set up Repository
      ansible.builtin.command:
        cmd: ["echo", "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable", "|", "sudo", "tee", "/etc/apt/sources.list.d/docker.list", ">", "/dev/null"]

    - name: Update APT cache
      apt:
        update_cache: yes
        cache_valid_time: 3600
    
    - name: Upgrade APT packages 
      apt:
        upgrade: dist
      register: upgrade
      retries: 15
      delay: 5
      until: upgrade is success
    
    - name: Install Docker with APT
      apt:
        pkg:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-compose-plugin
        state: latest
    
    - name: Enable docker service
      ansible.builtin.systemd:
        name: docker
        enabled: yes

    # SYSTEM CONFIG

    - name: Check for reboot
      stat:
        path: /var/run/reboot-required
      register: reboot_required

    - name: Set hostname
      hostname:
        name: "{{ inventory_hostname_short }}"

    - name: Add FQDN to /etc/hosts
      lineinfile:
        dest: /etc/hosts
        regexp: '^127\.0\.1\.1'
        line: '127.0.1.1 {{ inventory_hostname }} {{ inventory_hostname_short }}'
        state: present

    - name: Set timezone
      timezone:
        name: "{{ ti_zone }}"

    - name: Change ssh port
      lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: 'Port '
        line: 'Port {{ ssh_port }}'
        state: present
      notify:
        - restart sshd

    # SECURITY

    - name: Create user with sudo privs
      user:
        name: "{{ user }}"
        password: "{{ user_passwd | password_hash('sha512') }}"
        state: present
        groups: sudo
        append: true
        shell: /bin/bash

    - name: Check pubkeys are present
      authorized_key:
        user: "{{ user }}"
        state: present
        key: "{{ ssh_pub_key }}"

    - name: Pubkeys for root user
      authorized_key:
        user: root
        state: present
        key: "{{ ssh_pub_key }}"

    - name: Change root password.
      user:
        name: root
        password: "{{ root_passwd | password_hash('sha512') }}"

    - name: Disable SSH pass for root
      lineinfile:
        path: /etc/ssh/sshd_config
        state: present
        regexp: '^#?PermitRootLogin'
        line: 'PermitRootLogin prohibit-password'
      notify:
        - restart sshd

    - name: Disable clear-text passwords
      lineinfile:
        path: /etc/ssh/sshd_config
        state: present
        regexp: '^#?PasswordAuthentication'
        line: 'PasswordAuthentication no'
      notify:
        - restart sshd
...